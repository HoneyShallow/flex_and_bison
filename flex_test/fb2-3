%option noyywrap
%x IFILE

%{
	struct bufstack{
		struct buffstack * prev; /*上一个文件的信息 */
		YY_BUFFER_STATE bs; /* 保存的缓冲区 */
		int lineno; /*保存的行号*/
		char *filename; /*文件名*/
		FILE * f; /*当前文件的指针*/
	} *curbs = 0;
	char * curfilename; /*当前输入文件的名称*/
	int newfile(char * fn);
	int popfile(void);
%}

%%
/*匹配#include <iostream> 或者# include "mydefine.h"*/
^"#"[ \t]*include[ \t]*[\"<] { BEGIN IFILE; }
<IFILE>[^ \t\n\">]+ {
											{ int c; while((c = input()) && c != '\n'); }
											yylineno++;
											if(!newfile(yytext))
													yyteminate(); /*no such file*/
											BEGIN INITIAL;
										}
<IFILE>.|\n 	{ 
		fprintf(stderr, "%4d bad include line\n", yylineno);
		yyterminate();
		}
<<EOF>>		{ if(!popfile()) yyteminate();}

^.		{fprintf(yyout, "%4d %s", yylineno, yytext);}
^\n		{fprintf(yyout, "%4d %s", yylineno, yytext);}
\n 		{ECHO; yylineno++;}
.		{ECHO;}

%%

int main(int argc, char** argv){
	if(argc < 2){
		fprintf(stderr, "need filename\n");
		return 1;
	}
	if(newfile(argv[1]))
		yylex();
	return 0;
}
int newfile(char * fn) {
	FILE * f = fopen(fn, "r");
	struct bufstack * bs = malloc(sizeof(struct bufstack));
}
